# -*- mode: snippet -*-
# -*- coding: utf-8 -*-
# name: Instance method with Sphinx docstring
# contributor: Sean Fisk <sean@seanfisk.com>
# contributor: Orestis Markou
# contributor: Yasser González Fernández <yglez@uh.cu>
# key: sdefm
# --
def ${1:name}(self, $2):
    """$3
    ${2:$
      (let* 
          ((docstring-end
            (make-string 3 ?\"))
           (indent
            (concat "\n" (make-string (current-column) ? )))
           (args
            (mapconcat
             '(lambda (x)
      	  (if (not (string= (nth 0 x) ""))
      	      (concat ":param " (nth 0 x) ": " indent ":type " (nth 0 x) ": ")))
             (mapcar
      	'(lambda (x)
      	   (mapcar
      	    '(lambda (x)
      	       (replace-regexp-in-string
      		"[[:blank:]]*$" ""
      		(replace-regexp-in-string "^[[:blank:]]*" "" x)))
      	    x))
      	(mapcar '(lambda (x) (split-string x "="))
      		(split-string text ",")))
             indent)))
        (if (string= args "")
            docstring-end
          (mapconcat
           'identity
           (list "" args docstring-end)
           indent)))
    }
    $0